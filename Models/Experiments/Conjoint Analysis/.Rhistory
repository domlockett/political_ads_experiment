#     #if they match my loop works
#     if(all(dvValues6a == dvValues6b) & all(dvValues6a == colValues) ){
#     print(paste('Good job, Kid;', 'iteration:', count, 'subject:', subjects[i]))
#       }else{#if not good job wasting your time
#       print(paste('Try again;', 'investigate subject', subjects[i]))
#     }
#   }
# }
######################################
#add profile labels
tass$profile <-c()
profile_types <- unique(tass$image_data)
profile_labels <- c()
for(i in 1:length(profile_types)){
profile_labels[i] <- paste('Profile',i, sep = " ")
}
for(i in 1:nrow(tass)){
for(j in 1:length(profile_types)){
if(tass$image_data[i] == profile_types[j]){
tass$profile[i] <- profile_labels[j]
}
}
}
##########################
#First number: Source
# 1.Trump
# 2.Biden
# 3.Power the Future
# 4.Patagonia
# 5.ExxonMobil
# 6.Sierra Club
##########################
#Second number: Message
# 1.Pro pipeline
# 2.Oppose pipline
# 3.Oil and gas
# 4.Cut Methane
# 5.EngerySector
# 6.Nature
##########################
#Third number: Image
# 1.Landscape
# 2.Pipeline
# 3.Oil rig
# 4.Solar wind
# 5.Desert
## ##########################
tass$source <- recode_factor(tass$source, '1' = "Trump", '2' = 'Biden', '3' = 'Power the Future', '4' = 'Patagonia', '5'= 'ExxonMobil', '6'= 'Sierra Club' , .defualt = levels(tass$source) )
tass$message <- recode_factor(tass$message, '1' = "Pro pipeline", '2' = 'Anti pipeline', '3' = 'Oil and gas', '4' = 'Cut methane', '5'= 'Energy security', '6'= 'Nature' , .defualt = levels(tass$message) )
tass$image <- recode_factor(tass$image, '1' = "Landscape", '2' = 'Pipeline', '3' = 'Oil rig', '4' = 'Solar wind', '5'= 'Desert' , .defualt = levels(tass$image) )
######################################
#make some PID indicators
#
tass$PID <- tass$PartyID7
tass$pid <- tass$PartyID7
tass$PID <- recode_factor(tass$PartyID7, '1' = "Strong Democrat", '2' = 'Moderate Democrat', '3' = 'Lean Democrat', '4' = "Don't Lean/Independent/None", '5'= 'Lean Republican', '6'= 'Moderate Republican', '7' = 'Strong Republican' , .defualt = levels(tass$PID) )
tass$pid <- recode_factor(tass$PartyID7, '1' = "Democrat", '2' = 'Democrat', '3' = 'Democrat', '4' = 'NA', '5'= 'Republican', '6'= 'Republican', '7' = 'Republican' , .defualt = levels(tass$pid) )
tass$pid[tass$pid == 'NA'] <- NA
######################################
#separate out attributes
# There are actually 5 attributes for this conjoint:
# Source type: (Candidate/company/political org)
#
# Source orientation: (consistent/inconsistent with ind. attitudes)
#
# Message strength: (Low political/medium/high)
#
# Message orientation: (consistent/inconsistent with ind. attitudes)
#
# Picture: As is currently
## Source type:
### Biden, Trump - candidates
### Exxon Patagonia- companies
### Sierra PTF- organizations
## Source orientation:
### Trump, Exxon, Power the Future - Pro oil
### Biden, Sierra Club, Patagonia - Pro environment
## Message strength
### Pro pipeline, Anti pipeline - Highly politicized
### Oil and gas, Cut Methane - Somewhat politicized
### Nature, Energy security - Neutral
## Message orientation
### Pro pipeline, Oil and Gas, Energy security- Pro oil
### Anti pipeline, cut methane, nature- Pro environment
tass$sourceType <- NA
for(i in 1:nrow(tass)){
if(tass$source[i] == 'Biden' | tass$source[i] == 'Trump'){
tass$sourceType[i] <- 'Candidate'
}else if(tass$source[i] =='ExxonMobil' | tass$source[i] == 'Patagonia'){
tass$sourceType[i] <- 'Company'
}else if(tass$source[i] == 'Sierra Club' | tass$source[i] == 'Power the Future'){
tass$sourceType[i] <- 'Organization'
}
}
tass$sourceType <- as.factor(tass$sourceType)
tass$sourceOrient <- NA
for(i in 1:nrow(tass)){
if(tass$source[i]== 'Trump' | tass$source[i] == 'ExxonMobil' | tass$source[i] == 'Power the Future'){
tass$sourceOrient[i] <- 'Pro-oil'
}else if(tass$source[i]== 'Biden' | tass$source[i] == 'Sierra Club' | tass$source[i] == 'Patagonia'){
tass$sourceOrient[i] <- 'Pro-environment'
}
}
tass$sourceOrient <- as.factor(tass$sourceOrient)
tass$messageStrength <- NA
for(i in 1:nrow(tass)){
if(tass$message[i] == 'Pro pipeline' | tass$message[i] == 'Anti pipeline' ){
tass$messageStrength[i] <- 'Highly political'
}else if(tass$message[i] == 'Oil and gas'| tass$message[i] == 'Cut methane'){
tass$messageStrength[i] <- 'Moderately political'
}else if(tass$message[i] == 'Nature' | tass$message[i] == 'Energy security'){
tass$messageStrength[i] <- 'Politically neutral'
}
}
tass$messageStrength <- as.factor(tass$messageStrength)
tass$messageOrient <- NA
for(i in 1:nrow(tass)){
if(tass$message[i]== 'Pro pipeline' | tass$message[i] == 'Oil and gas' | tass$message[i] == 'Energy security'){
tass$messageOrient[i] <- 'Pro-oil'
}else if(tass$message[i]== 'Anti pipeline' | tass$message[i] == 'Cut methane' | tass$message[i] == 'Nature'){
tass$messageOrient[i] <- 'Pro-environment'}
}
tass$messageOrient <- as.factor(tass$messageOrient)
######################################
#Clean up priors
tass$globalWarming <- NA
tass$globalWarming <- recode(tass$POLADSGLOBALWARMINGS4, '1' = "1", '3' = '2', '2' = '3', .default = NA_character_)
tass$globalWarming <- as.numeric(tass$globalWarming)
tass$regulate <- tass$POLADSREGULATIONS4
tass$regulate[tass$regulate >7 ] <- NA
tass$en <-  (tass$regulate + tass$globalWarming)
tass$priors <-NA
tass$priors[tass$en>5] <- 'Pro-oil prior'
tass$priors[tass$en<6] <- 'Pro-environment prior'
write.csv(tass, 'C:/Users/dl0ck/OneDrive/Summer 2021/PolAdsTransparency/politics_user_study/Experiments/Conjoint Analysis/CJ.csv')
knitr::opts_chunk$set(echo = FALSE,comment=NA)
library(descr)
library(readr)
#library(RnBeads)
library(magick)
library(dplyr)
library(magrittr)
library(grid)
library(kableExtra)
library(stringr)
library(gridExtra)
library(knitr)
library(ggplot2)
library(gtable)
library(labelled)
library(haven)
library(gmodels)
library(png)
library(tidyverse)
library(cjoint)
library(stargazer)
C:\Users\dl0ck\OneDrive\Summer 2021\PolAdsTransparency\politics_user_study\Experiments\Conjoint Analysis
knitr::opts_chunk$set(echo = FALSE,comment=NA)
library(descr)
library(readr)
#library(RnBeads)
library(magick)
library(dplyr)
library(magrittr)
library(grid)
library(kableExtra)
library(stringr)
library(gridExtra)
library(knitr)
library(ggplot2)
library(gtable)
library(labelled)
library(haven)
library(gmodels)
library(png)
library(tidyverse)
library(cjoint)
library(stargazer)
CJ <- read.csv(file = 'C:/Users/dl0ck/OneDrive/Summer 2021/PolAdsTransparency/politics_user_study/Experiments/Conjoint Analysis/CJ.csv', header = TRUE, stringsAsFactors = T)
cj <- CJ[(complete.cases(CJ$dv1)&complete.cases(CJ$priors)),]
cj
baselines <- list()
baselines$sourceType <- "Company"
baselines$sourceOrient <- "Pro-priors"
baselines$messageStrength <- "Politically neutral"
baselines$sourceOrient <- "Pro-priors"
baselines$priors <- "Pro-priors prior"
baselines$image <- "Landscape"
results <- amce(dv1 ~  image + sourceType + messageStrength + sourceOrient  + messageOrient + priors + messageOrient*priors, cluster=TRUE, respondent.id="CaseId", weights ='WEIGHT', data=cj, baseline= baselines)
baselines <- list()
baselines$sourceType <- "Company"
baselines$sourceOrient <- "Pro-oil"
baselines$messageStrength <- "Politically neutral"
baselinesmessageOrient <- "Pro-oil"
baselines$priors <- "Pro-oil prior"
baselines$image <- "Landscape"
results <- amce(dv1 ~  image + sourceType + messageStrength + sourceOrient  + messageOrient + priors + messageOrient*priors, cluster=TRUE, respondent.id="CaseId", weights ='WEIGHT', data=cj, baseline= baselines)
plot(results, xlab="Change in Pr(Ad considered more political)", text.size=13)
baselines <- list()
baselines$sourceType <- "Company"
baselines$sourceOrient <- "Pro-oil"
baselines$messageStrength <- "Politically neutral"
baselines$messageOrient <- "Pro-oil"
baselines$priors <- "Pro-oil prior"
baselines$image <- "Landscape"
results <- amce(dv1 ~  image + sourceType + messageStrength + sourceOrient  + messageOrient + priors + messageOrient*priors, cluster=TRUE, respondent.id="CaseId", weights ='WEIGHT', data=cj, baseline= baselines)
plot(results, xlab="Change in Pr(Ad considered more political)", text.size=13)
# You can specify interactions in the formula using : or *
sourceME <- amce(dv1 ~   sourceType +  messageStrength +  image +sourceOrient +messageOrient + priors
+sourceOrient*priors  , data=cj, cluster=TRUE, respondent.id="CaseId", weights ='WEIGHT', baseline= baselines)
#
# You can specify interactions in the formula using : or *
sourceME <- amce(dv1 ~  image + sourceType + messageStrength + sourceOrient  + messageOrient + priors + sourceOrient*priors, cluster=TRUE, respondent.id="CaseId", weights ='WEIGHT', data=cj, baseline= baselines)
#
# You can specify interactions in the formula using : or *
sourceME <- amce(dv1 ~  image + sourceType + messageStrength + sourceOrient  + messageOrient + priors + sourceOrient*priors, cluster=TRUE, respondent.id="CaseId", weights ='WEIGHT', data=cj, baseline= baselines)
#
# Plot results
plot(sourceME, xlab="Change in Pr(Ad considered more political)", text.size=13)
summary(sourceME)
summary(sourceME)
baselines <- list()
baselines$sourceType <- "Company"
baselines$sourceOrient <- "Pro-oil"
baselines$messageStrength <- "Politically neutral"
baselines$messageOrient <- "Pro-oil"
baselines$priors <- "Pro-oil prior"
baselines$image <- "Landscape"
results <- amce(dv1 ~  image + sourceType + messageStrength + sourceOrient  + messageOrient + priors , cluster=TRUE, respondent.id="CaseId", weights ='WEIGHT', data=cj, baseline= baselines)
plot(results, xlab="Change in Pr(Ad considered more political)", text.size=13)
messageAtt <- amce(dv1 ~  image + sourceType + messageStrength + sourceOrient  + messageOrient + priors + messageOrient*priors, cluster=TRUE, respondent.id="CaseId", weights ='WEIGHT', data=cj, baseline= baselines)
plot(messageAtt, xlab="Change in Pr(Ad considered more political)", text.size=13)
cj$sourceOrient
hetero_pid2 <- amce(dv1 ~ messageOrient +  pid+ pid*messageOrient, data=cj2, cluster=TRUE, respondent.id="CaseId", respondent.varying = 'pid',weights = 'WEIGHT', baseline= baselines)
knitr::opts_chunk$set(echo = FALSE,comment=NA)
library(descr)
library(readr)
#library(RnBeads)
library(magick)
library(dplyr)
library(magrittr)
library(grid)
library(kableExtra)
library(stringr)
library(gridExtra)
library(knitr)
library(ggplot2)
library(gtable)
library(labelled)
library(haven)
library(gmodels)
library(png)
library(tidyverse)
library(cjoint)
library(stargazer)
CJ <- read.csv(file = 'C:/Users/dl0ck/OneDrive/Summer 2021/PolAdsTransparency/politics_user_study/Experiments/Conjoint Analysis/CJ.csv', header = TRUE, stringsAsFactors = T)
cj <- CJ[(complete.cases(CJ$dv1)&complete.cases(CJ$priors)),]
baselines <- list()
baselines$sourceType <- "Company"
baselines$sourceOrient <- "Pro-oil"
baselines$messageStrength <- "Politically neutral"
baselines$messageOrient <- "Pro-oil"
baselines$priors <- "Pro-oil prior"
baselines$image <- "Landscape"
cj2 <- cj
cj2 <- cj[is.na(cj2$pid)==F,]
cj2$pid <- as.factor(cj2$pid)
# results <- amce(dv1 ~  image + sourceType + messageStrength + sourceOrient  + messageOrient + priors + , cluster=TRUE, respondent.id="CaseId", weights ='WEIGHT', data=cj, baseline= baselines)
hetero_pid2 <- amce(dv1 ~ messageOrient +  pid+ pid*messageOrient, data=cj2, cluster=TRUE, respondent.id="CaseId", respondent.varying = 'pid',weights = 'WEIGHT', baseline= baselines)
baselines$sourceOrient
sourcesAtt <- amce(dv1 ~  image + sourceType + messageStrength + sourceOrient  + messageOrient + priors + sourceOrient*priors, cluster=TRUE, respondent.id="CaseId", weights ='WEIGHT', data=cj, baseline= baselines)
# Plot results
plot(sourcesAtt, xlab="Change in Pr(Ad considered more political)", text.size=13)
cj$messageOrient
hetero_pid2 <- amce(dv1 ~ sourceOrient +  pid+ pid*sourceOrient , data=cj2, cluster=TRUE, respondent.id="CaseId", respondent.varying = 'pid',weights = 'WEIGHT', baseline= baselines)
cj2
baselines <- list()
baselines$sourceType <- "Company"
baselines$sourceOrient <- "Pro-oil"
baselines$messageStrength <- "Politically neutral"
baselines$messageOrient <- "Pro-oil"
baselines$priors <- "Pro-oil prior"
baselines$image <- "Landscape"
cj1 <- cj[is.na(cj$pid)==F,]
cj1$pid <- as.factor(cj1$pid)
# results <- amce(dv1 ~  image + sourceType + messageStrength + sourceOrient  + messageOrient + priors + , cluster=TRUE, respondent.id="CaseId", weights ='WEIGHT', data=cj, baseline= baselines)
hetero_pid2 <- amce(dv1 ~ messageOrient +  pid+ pid*messageOrient, data=cj1, cluster=TRUE, respondent.id="CaseId", respondent.varying = 'pid',weights = 'WEIGHT', baseline= baselines)
baselines
hetero_pid2 <- amce(dv1 ~ messageOrient +  pid+ pid*messageOrient, data=cj1, cluster=TRUE, respondent.id="CaseId",weights = 'WEIGHT', baseline= baselines)
levels(cj1$sourceOrient)
hetero_pid2 <- amce(dv1 ~ messageOrient +  pid + pid*messageOrient, data=cj, cluster=TRUE, respondent.id="CaseId",weights = 'WEIGHT', baseline= baselines)
hetero_pid2 <- amce(dv1 ~ messageOrient +  pid + pid*messageOrient, data=cj[is.na(cj$pid)==F], cluster=TRUE, respondent.id="CaseId",weights = 'WEIGHT', baseline= baselines)
hetero_pid2 <- amce(dv1 ~ messageOrient +  pid + pid*messageOrient, data=cj[is.na(cj$pid)==F,], cluster=TRUE, respondent.id="CaseId",weights = 'WEIGHT', baseline= baselines)
hetero_pid2 <- amce(dv1 ~ messageOrient +  pid + pid*messageOrient, data=cj[is.na(cj$pid)==F,], cluster=TRUE, respondent.id="CaseId",weights = 'WEIGHT')
plot(hetero_pid2, facet_wrap=c("pid"), ylim = c(-.6,1))
sourcePid <- amce(dv1 ~ sourceOrient +  pid+ pid*sourceOrient , data=cj2, cluster=TRUE, respondent.id="CaseId", respondent.varying = 'pid',weights = 'WEIGHT', baseline= baselines)
sourcePid <- amce(dv1 ~ sourceOrient +  pid+ pid*sourceOrient , data=cj2, cluster=TRUE, respondent.id="CaseId", respondent.varying = 'pid',weights = 'WEIGHT', baseline= baselines$sourceOrient)
baselines$sourceOrient
sourcePid <- amce(dv1 ~ sourceOrient +  pid+ pid*sourceOrient , data=cj2, cluster=TRUE, respondent.id="CaseId", respondent.varying = 'pid',weights = 'WEIGHT', baseline= 'Pro-oil')
base <- list()
base$pid <- 'Democrat'
sourcePid <- amce(dv1 ~ sourceOrient +  pid+ pid*sourceOrient , data=cj2, cluster=TRUE, respondent.id="CaseId", respondent.varying = 'pid',weights = 'WEIGHT', baseline= 'Pro-oil')
sourcePid <- amce(dv1 ~ sourceOrient +  pid+ pid*sourceOrient , data=cj2, cluster=TRUE, respondent.id="CaseId", respondent.varying = 'pid',weights = 'WEIGHT', baseline= base)
base$sourceOrient <- 'Pro-oil'
sourcePid <- amce(dv1 ~ sourceOrient +  pid+ pid*sourceOrient , data=cj2, cluster=TRUE, respondent.id="CaseId", respondent.varying = 'pid',weights = 'WEIGHT', baseline= base)
base <- list()
base$pid <- 'Democrat'
base$sourceOrient <- 'Pro-oil'
sourcePid <- amce(dv1 ~ sourceOrient +  pid+ pid*sourceOrient , data=cj2, cluster=TRUE, respondent.id="CaseId", respondent.varying = 'pid',weights = 'WEIGHT', baseline= base)
baselines <- list()
baselines$sourceType <- "Company"
baselines$sourceOrient <- "Pro-oil"
baselines$messageStrength <- "Politically neutral"
baselines$messageOrient <- "Pro-oil"
baselines$priors <- "Pro-oil prior"
baselines$image <- "Landscape"
baselines$pid <- 'Republican'
# results <- amce(dv1 ~  image + sourceType + messageStrength + sourceOrient  + messageOrient + priors + , cluster=TRUE, respondent.id="CaseId", weights ='WEIGHT', data=cj, baseline= baselines)
sourcePid <- amce(dv1 ~ sourceOrient +  pid+ pid*sourceOrient , data=cj2, cluster=TRUE, respondent.id="CaseId", respondent.varying = 'pid',weights = 'WEIGHT', baseline= baselines)
baselines <- list()
baselines$sourceType <- "Company"
baselines$sourceOrient <- "Pro-oil"
baselines$messageStrength <- "Politically neutral"
baselines$messageOrient <- "Pro-oil"
baselines$priors <- "Pro-oil prior"
baselines$image <- "Landscape"
baselines$pid <- 'Republican'
base <- list()
base$pid <- 'Republican'
base$sourceOrient <- 'Pro-oil'
base$messageOrient <- 'Pro-oil'
# results <- amce(dv1 ~  image + sourceType + messageStrength + sourceOrient  + messageOrient + priors + , cluster=TRUE, respondent.id="CaseId", weights ='WEIGHT', data=cj, baseline= baselines)
messagePid <- amce(dv1 ~ messageOrient +  pid + pid*messageOrient, data=cj[is.na(cj$pid)==F,], cluster=TRUE, respondent.id="CaseId",weights = 'WEIGHT', baselines = base)
base <- list()
base$pid <- 'Republican'
base$sourceOrient <- 'Pro-oil'
sourcePid <- amce(dv1 ~ sourceOrient +  pid+ pid*sourceOrient , data=cj2, cluster=TRUE, respondent.id="CaseId", respondent.varying = 'pid',weights = 'WEIGHT', baseline= baselines)
sourcePid <- amce(dv1 ~ sourceOrient +  pid+ pid*sourceOrient , data=cj[is.na(cj$pid)==F], cluster=TRUE, respondent.id="CaseId", respondent.varying = 'pid',weights = 'WEIGHT', baseline= baselines)
sourcePid <- amce(dv1 ~ sourceOrient +  pid+ pid*sourceOrient , data=cj[is.na(cj$pid)==F],, cluster=TRUE, respondent.id="CaseId", respondent.varying = 'pid',weights = 'WEIGHT', baseline= baselines)
sourcePid <- amce(dv1 ~ sourceOrient +  pid+ pid*sourceOrient , data=cj[is.na(cj$pid)==F,], cluster=TRUE, respondent.id="CaseId", respondent.varying = 'pid',weights = 'WEIGHT', baseline= baselines)
sourcePid <- amce(dv1 ~ sourceOrient +  pid+ pid*sourceOrient , data=cj[is.na(cj$pid)==F,], cluster=TRUE, respondent.id="CaseId", respondent.varying = 'pid',weights = 'WEIGHT', baseline= base)
baselines <- list()
baselines$sourceType <- "Company"
baselines$sourceOrient <- "Pro-oil"
baselines$messageStrength <- "Politically neutral"
baselines$messageOrient <- "Pro-oil"
baselines$priors <- "Pro-oil prior"
baselines$image <- "Landscape"
baselines$pid <- 'Republican'
base <- list()
base$pid <- 'Republican'
base$sourceOrient <- 'Pro-oil'
base$messageOrient <- 'Pro-oil'
# results <- amce(dv1 ~  image + sourceType + messageStrength + sourceOrient  + messageOrient + priors + , cluster=TRUE, respondent.id="CaseId", weights ='WEIGHT', data=cj, baseline= baselines)
messagePid <- amce(dv1 ~ messageOrient +  pid + pid*messageOrient, data=cj[is.na(cj$pid)==F,], cluster=TRUE, respondent.id="CaseId",weights = 'WEIGHT', baselines = base)
baselines <- list()
baselines$sourceType <- "Company"
baselines$sourceOrient <- "Pro-oil"
baselines$messageStrength <- "Politically neutral"
baselines$messageOrient <- "Pro-oil"
baselines$priors <- "Pro-oil prior"
baselines$image <- "Landscape"
baselines$pid <- 'Republican'
base <- list()
base$pid <- 'Republican'
base$sourceOrient <- 'Pro-oil'
bases <- list()
bases$pid <- 'Republican'
bases$messageOrient <- 'Pro-oil'
# results <- amce(dv1 ~  image + sourceType + messageStrength + sourceOrient  + messageOrient + priors + , cluster=TRUE, respondent.id="CaseId", weights ='WEIGHT', data=cj, baseline= baselines)
messagePid <- amce(dv1 ~ messageOrient +  pid + pid*messageOrient, data=cj[is.na(cj$pid)==F,], cluster=TRUE, respondent.id="CaseId",weights = 'WEIGHT', baselines = bases)
plot(messagePid, facet_wrap=c("pid"))
messagePid <- amce(dv1 ~ messageOrient +  pid + pid*messageOrient, data=cj[is.na(cj$pid)==F,], cluster=TRUE, respondent.varying = 'pid' , respondent.id="CaseId",weights = 'WEIGHT', baselines = bases)
plot(messagePid, facet_wrap=c("pid"))
nrow(cj[is.na(cj$pid)==F,])
messagePid <- amce(dv1 ~  image + sourceType + messageStrength + sourceOrient  + messageOrient + priors + sourceOrient*priors, cluster=TRUE, respondent.id="CaseId", weights ='WEIGHT', data=cj[is.na(cj$pid)==F,], baseline= bases, respondent.varying = 'pid')
messagePid <- amce(dv1 ~  image + sourceType + messageStrength + sourceOrient  + messageOrient + pid + sourceOrient*pid, cluster=TRUE, respondent.id="CaseId", weights ='WEIGHT', data=cj[is.na(cj$pid)==F,], baseline= bases, respondent.varying = 'pid')
plot(messagePid, facet_wrap=c("pid"))
messagePid <- amce(dv1 ~  sourceOrient + pid + sourceOrient*pid, cluster=TRUE, respondent.id="CaseId", weights ='WEIGHT', data=cj[is.na(cj$pid)==F,], baseline= bases, respondent.varying = 'pid')
messagePid <- amce(dv1 ~  messageOrient + pid + messageOrient*pid, cluster=TRUE, respondent.id="CaseId", weights ='WEIGHT', data=cj[is.na(cj$pid)==F,], baseline= bases, respondent.varying = 'pid')
plot(messagePid, facet_wrap=c("pid"))
messagePid <- amce(dv1 ~  image + messageOrient + pid + messageOrient*pid, cluster=TRUE, respondent.id="CaseId", weights ='WEIGHT', data=cj[is.na(cj$pid)==F,], baseline= bases, respondent.varying = 'pid')
plot(messagePid, facet_wrap=c("pid"))
messagePid <- amce(dv1 ~ messageOrient + pid + messageOrient*pid, cluster=TRUE, respondent.id="CaseId", weights ='WEIGHT', data=cj[is.na(cj$pid)==F,], baseline= bases, respondent.varying = 'pid')
plot(messagePid, facet_wrap=c("pid"))
messageAtt <- amce(dv1 ~  image + sourceType + messageStrength + sourceOrient  + messageOrient + priors + messageOrient*priors, cluster=TRUE, respondent.id="CaseId", respondent.varying= 'priors', weights ='WEIGHT', data=cj, baseline= baselines)
plot(messageAtt, xlab="Change in Pr(Ad considered more political)", text.size=13)
stargazer(summary(messageAtt))
class(summary(messageAtt))
cat(summary(messageAtt))
summary(messageAtt)
summary(messageAtt)[1]
cat(summary(messageAtt)[1])
as.matrix(summary(messageAtt)[1])
(summary(messageAtt)[1])
class(summary(messageAtt[1]))
summary(messageAtt)$table
summary(messageAtt)[1]
summary(messageAtt)[2]
summary(messageAtt)[1]
class(summary(messageAtt)[1])
unlist(summary(messageAtt)[1])
summary(messageAtt)[1]
as.data.frame(summary(messageAtt)[1])
stargazer(as.data.frame(summary(messageAtt)[1]))
stargazer(as.data.frame(summary(messageAtt)[1]),type='text')
stargazer(as.data.frame(summary(messageAtt)[1]),type='text')
stargazer(as.data.frame(summary(messageAtt)),type='text')
summary(messageAtt)[1]
stargazer(as.data.frame(summary(messageAtt)[1]),type='text')
(as.data.frame(summary(messageAtt)[1]),type='text')
(as.data.frame(summary(messageAtt)[1])
as.data.frame(summary(messageAtt)[1])
as.data.frame(summary(messageAtt)[1])
summary(messageAtt)[1][1]
summary(messageAtt)[1][1][1]
summary(messageAtt)[1][1][1][1]
as.data.frame(summary(messageAtt)[1])
colnames(summary(messageAtt))
colnames(as.data.frame(summary(messageAtt)))
colnames(summary(messageAtt)[1])
colnames(as.data.frame(summary(messageAtt)[1]))
summary(messageAtt)[1]
as.data.frame(summary(messageAtt)[1], col.names = c("Attribute","Level","Estimate","Std. Err"  "Z.value"   "Pr(>|z|)" , "" ))
as.data.frame(summary(messageAtt)[1], col.names = c("Attribute","Level","Estimate","Std. Err", "Z.value" , "Pr(>|z|)" , ""))
as.data.frame(summary(messageAtt)[1], col.names = c("Attribute","Level","Estimate","Std. Err", "Z.value" , "Pr(>|z|)" , " "))
as.data.frame(summary(messageAtt)[1], col.names = " "))
as.data.frame(summary(messageAtt)[1], col.names = " ")
as.data.frame(summary(messageAtt)[1], col.names = "")
as.data.frame(summary(messageAtt)[1], col.names = )
as.data.frame(summary(messageAtt)[1], col.names = "")
colnames(as.data.frame(summary(messageAtt)[1], col.names = ""))
x <- as.data.frame(summary(messageAtt)[1]
colnames(x) <- c("Attribute","Level","Estimate","Std. Err", "Z.value" , "Pr(>|z|)" , " ")
x <- as.data.frame(summary(messageAtt)[1])
colnames(x) <- c("Attribute","Level","Estimate","Std. Err", "Z.value" , "Pr(>|z|)" , " ")
x <- as.data.frame(summary(messageAtt)[1])
colnames(x) <- c("Attribute","Level","Estimate","Std. Err", "Z.value" , "Pr(>|z|)" , " ")
x
x
stargazer(x,type='text')
x <- as.data.frame(summary(messageAtt)[1])
colnames(x) <- c("Attribute","Level","Estimate","Std. Err", "Z.value" , "Pr(>|z|)" , " ")
kable(x,type='text')
x <- as.data.frame(summary(messageAtt)[1])
colnames(x) <- c("Attribute","Level","Estimate","Std. Err", "Z.value" , "Pr(>|z|)" , " ")
kable(x,booktabs=T)
summary(sourcesAtt)
summary(sourcesAtt)[2]
summary(sourcesAtt)[3]
summary(sourcesAtt)[4]
summary(sourcesAtt)[5]
summary(sourcesAtt)
summary(sourcesAtt)[1]
summary(sourcesAtt)[5]
summary(sourcesAtt)[4]
summary(sourcesAtt)[7]
summary(sourcesAtt)[6]
summary(sourcesAtt)[5]
summary(sourcesAtt)[4]
summary(sourcesAtt)[3]
summary(sourcesAtt)[2]
as.data.frame(rbind(summary(sourcesAtt)[1],summary(sourcesAtt)[2]))
summary(sourcesAtt)[2]
summary(sourcesAtt)[2]
summary(sourcesAtt)[2]
summary(sourcesAtt)[1]
rbind(summary(sourcesAtt)[1],summary(sourcesAtt)[2])
rbind(as.data.frame(summary(sourcesAtt)[1]),as.data.frame(summary(sourcesAtt)[2]))
as.data.frame(summary(sourcesAtt)[1])
x <- as.data.frame(summary(sourcesAtt)[1])
y <-  as.data.frame(summary(sourcesAtt)[2])
colnames(x) <- c("Attribute","Level","Estimate","Std. Err", "Z.value" , "Pr(>|z|)" , " ")
colnames(y) <- c("Attribute","Level","Estimate","Std. Err", "Z.value" , "Pr(>|z|)" , " ")
kable(rbind(x,y),sourcesAtt=T)
x <- as.data.frame(summary(messageAtt)[1])
y <-  as.data.frame(summary(messageAtt)[2])
colnames(x) <- c("Attribute","Level","Estimate","Std. Err", "Z.value" , "Pr(>|z|)" , " ")
colnames(y) <- c("Attribute","Level","Estimate","Std. Err", "Z.value" , "Pr(>|z|)" , " ")
as.data.frame(summary(messageAtt)[2])
messageAtt <- amce(dv1 ~  image + sourceType + messageStrength + sourceOrient  + messageOrient + priors + messageOrient*priors, cluster=TRUE, respondent.id="CaseId", respondent.varying= 'priors', weights ='WEIGHT', data=cj, baseline= baselines)
as.data.frame(summary(messageAtt)[1])
as.data.frame(summary(messageAtt)[2])
as.data.frame(summary(messageAtt)[3])
x <- as.data.frame(summary(messageAtt)[1])
y <-  as.data.frame(summary(messageAtt)[3])
colnames(x) <- c("Attribute","Level","Estimate","Std. Err", "Z.value" , "Pr(>|z|)" , " ")
colnames(y) <- c("Attribute","Level","Estimate","Std. Err", "Z.value" , "Pr(>|z|)" , " ")
kable(rbind(x,y),sourcesAtt=T)
as.data.frame(summary(messageAtt)[3])
as.data.frame(summary(messageAtt)[4])
as.data.frame(summary(messageAtt)[5])
x <- as.data.frame(summary(messageAtt)[1])
y <-  as.data.frame(summary(messageAtt)[3])
z <-  as.data.frame(summary(messageAtt)[4])
colnames(x) <- c("Attribute","Level","Estimate","Std. Err", "Z.value" , "Pr(>|z|)" , " ")
colnames(y) <- c("Attribute","Level","Estimate","Std. Err", "Z.value" , "Pr(>|z|)" , " ")
colnames(z) <- c("Attribute","Level","Estimate","Std. Err", "Z.value" , "Pr(>|z|)" , " ")
kable(rbind(x,y,z),sourcesAtt=T)
x <- as.data.frame(summary(messageAtt)[1])
y <-  as.data.frame(summary(messageAtt)[3])
z <-  as.data.frame(summary(messageAtt)[4])
x
y
z
x <- as.data.frame(summary(messageAtt)[1])
y <-  as.data.frame(summary(messageAtt)[3])
z <-  as.data.frame(summary(messageAtt)[4])
colnames(x) <- c("Attribute","Level","Estimate","Std. Err", "Z.value" , "Pr(>|z|)" , " ")
colnames(y) <- c("Attribute","Level","Estimate","Std. Err", "Z.value" , "Pr(>|z|)" , " ")
colnames(z) <- c("Attribute","Level","Estimate","Std. Err", "Z.value" , "Pr(>|z|)" , " ")
kable(rbind(x,y,z),booktabs=T)
